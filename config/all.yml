#@ load("@ytt:data", "data")
#@ load("@ytt:template", "template")
#@ load("@ytt:library", "library")
#@ load("@ytt:assert", "assert")
#@ load("validations.star", "value")

#! -- DB --

#@ cc_db_user = data.values.cc.db.username or "cc-db"
#@ uaa_db_user = data.values.uaa.db.username or "uaa-db"

#@ def db_values():
databases:
#@overlay/match by="name",missing_ok=True
- name: cc
  username: #@ cc_db_user
  password: #@ data.values.cc.db.password
#@overlay/match by="name",missing_ok=True
- name: uaa
  username: #@ uaa_db_user
  password: #@ data.values.uaa.db.password
#@ end

#@ if data.values.db.enabled:
#@   db = library.get("github.com/cloudfoundry/db/config").with_data_values(db_values())
#@   db_url = db.export("url")()
#@ end

#@ cc_db_url = data.values.cc.db.url or db_url
#@ uaa_db_url = data.values.uaa.db.url or db_url

#! -- UAA basics --

#@ def uaa_values():
db:
  url: #@ uaa_db_url
  username: #@ uaa_db_user
  password: #@ data.values.uaa.db.password
#@ end

#@ uaa = library.get("github.com/cloudfoundry/uaa/config").with_data_values(uaa_values())
#@ uaa_url = uaa.export("url")()

#! -- CC --

#@ def cc_values():
uaa:
  url: #@ uaa_url
  client_secret: #@ data.values.cc.uaa_client_secret
db:
  url: #@ cc_db_url
  username: #@ cc_db_user
  password: #@ data.values.cc.db.password
#@ end

#@ cc = library.get("github.com/cloudfoundry/cc/config").with_data_values(cc_values())

#! -- Networking --

#@ def net_values():
cfroutesync:
  ccCA: "..." #! TODO
  ccBaseURL: #@ "https://" + cc.export("url")()
  uaaCA: "..." #! TODO
  uaaBaseURL: #@ "https://" + uaa_url
  clientName: networking
  clientSecret: #@ data.values.networking.uaa_client_secret
#@ end

#! include entire networking directory instead of just install/ytt/networking
#! because there is cfroutesync crd that leaves outside of that structure

#@ net = library.get("github.com/cloudfoundry/cf-k8s-networking").with_data_values(net_values())

#! -- UAA additional config --

#@ def uaa_clients_values():
clients:
#@overlay/match by="name",missing_ok=True
- name: #@ cc.export("uaa_client")()
  secret: #@ data.values.cc.uaa_client_secret
#@overlay/match by="name",missing_ok=True
- name: networking
  secret: #@ data.values.networking.uaa_client_secret
#@ end

#@ uaa = uaa.with_data_values(uaa_clients_values())

#! -- output --

--- #@ template.replace(cc.eval())
--- #@ template.replace(uaa.eval())
--- #@ template.replace(net.eval())

#@ if/end data.values.db.enabled:
--- #@ template.replace(db.eval())
